// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  uid    String  @id
  quests Quest[]
}

model Quest {
  id          Int      @id @default(autoincrement())
  slug        String   @unique
  user        User     @relation(fields: [userId], references: [uid])
  userId      String
  createdDate DateTime @default(now())
  name        String
  codes       Code[]

  claimCodes  ClaimCode[]
  claimEmails ClaimEmail[]

  enableQuest        Boolean                @default(true)
  victoryFulfillment VictoryFulfillmentType @default(NONE)
  enableConfetti     Boolean                @default(true)
  completionNote     String                 @default("")

  completionsCount Int @default(0)
}

enum VictoryFulfillmentType {
  NONE
  CLAIM_CODE
  COLLECT_EMAIL
}

model Code {
  id      Int     @id @default(autoincrement())
  slug    String  @unique
  quest   Quest?  @relation(fields: [questId], references: [id])
  questId Int?
  order   Int
  scans   Int
  name    String?
  note    String?

  imageId String?
}

model ClaimCode {
  id      Int     @id @default(autoincrement())
  code    Int
  claimed Boolean
  quest   Quest   @relation(fields: [questId], references: [id], onDelete: Cascade)
  questId Int

  // Codes must be unique per quest
  @@unique([questId, code])
}

model ClaimEmail {
  id      Int    @id @default(autoincrement())
  email   String
  quest   Quest  @relation(fields: [questId], references: [id], onDelete: Cascade)
  questId Int

  @@unique([questId, email])
}
